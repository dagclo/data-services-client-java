{"swagger":"2.0","info":{"version":"0.1.3","title":"URL Validation","description":"The URL Validation service is used to confirm that a particular URL, or multiple URLs, is valid and safe to use. For example, if you are designing a communication for customers and want to include a URL, you can check that the URL goes to a valid, active website before sending the communication.\n\n\nThe service validates web page addresses that use the HTTP and HTTPS application protocols. It does not process web addresses that are in the IPv4 and IPv6 address format.\n\n\n## Key functionality:\n\n\n* Validates URLs to a level specified and configured by the user.\n\n* Validates the existence of domains and conformity to patterns.\n\n* Checks whether a web server is responsive when queried for the URL.\n\n* Handles complexities, such as URL redirection.\n\n* Adds missing URL pieces, such as scheme, and removes noise from the input.\n\n* Provides codes to warn the user of authentication requirements, browser-specific URL length restrictions, and so forth.\n"},"paths":{"/services/url-validation/v1/validate":{"post":{"summary":"Validate URL","description":"The service's main endpoint, which validates a list of URLs.","parameters":[{"in":"header","name":"Job-ID","description":"Identifies the job that pertains to this request.","required":"false","type":"string"},{"in":"body","name":"body","description":"The URL validation request.","required":"true","schema":{"$ref":"#/definitions/UrlValidationRequest"}}],"responses":{"200":{"description":"Successful response.","schema":{"$ref":"#/definitions/UrlValidationResponse"}},"400":{"description":"Request is invalid because the request format is bad or because a required element is missing or empty.","schema":{"$ref":"#/definitions/error"}}}}}},"definitions":{"UrlValidationRequest":{"type":"object","properties":{"configuration":{"$ref":"#/definitions/UrlValidationRequestConfiguration"},"records":{"type":"array","maxItems":"500","items":{"$ref":"#/definitions/UrlValidationRequestRecord"}}}},"UrlValidationRequestConfiguration":{"type":"object","properties":{"validation_depth":{"$ref":"#/definitions/UrlValidationDepth","default":"Deep","description":"Defines the level of URL validation to apply. Specify a level to match the processing needs of your business workflow.\n"},"default_scheme":{"type":"string","description":"Specifies the default protocol to be applied to input URL strings that do not include one.","enum":["http","https"],"default":"http"}}},"UrlValidationDepth":{"type":"string","description":"Defines the level of URL validation to apply. Specify a level to match the processing needs of your business workflow.\n* Shallow - Validates the format of the input URL. This level of validation does not contact a web server.\n* Moderate - Validates URL format, and verifies that DNS resolution of the host name succeeds and that a web server is running on that host and port. The test is against the root (/) path of the web server.\n* Deep - Validates URL format, verifies DNS resolution of the host name, and further tests that a HEAD request for the full URL has a successful response. If the HEAD request fails, a GET request is then tested.\n","enum":["Shallow","Moderate","Deep"]},"UrlValidationRequestRecord":{"type":"object","properties":{"id":{"type":"string","description":"User-specified reference ID or name for the artifact.","example":"qh7ALPQb"},"url":{"type":"string","description":"The URL to be validated.","example":"http://www.quadient.com"}}},"UrlValidationResponse":{"type":"object","properties":{"records":{"type":"array","items":{"$ref":"#/definitions/UrlValidationResponseRecord"}}}},"UrlValidationResponseRecord":{"type":"object","properties":{"id":{"type":"string","description":"User-specified reference ID or name as passed in.","example":"qh7ALPQb"},"url":{"type":"string","description":"The URL that was evaluated. The URL that is returned may have minor modifications. For example, whitespaces may be trimmed, text casing may be standardized, and a scheme (protocol) may be added.\n"},"original_url":{"type":"string","description":"The URL that was provided by the user.\n"},"redirected_url":{"type":"string","description":"The URL that the provided URL redirects to, if applicable.\n"},"outcome":{"$ref":"#/definitions/OutcomeDefinition"}}},"OutcomeDefinition":{"type":"object","required":["category"],"properties":{"category":{"type":"string","description":"The final status of the validation operation.\n","enum":["Valid","Corrected","Doubtful","Invalid","Skipped"]},"codes":{"type":"object","description":"An object that contains status codes as keys and details/messages as values. Codes prefixed with A are informational. Codes prefixed with C describe a correction. Codes prefixed with E describe an input error. These records are skipped or are invalid. The values may be either a string message or another object that contains additional information. More than one code may be returned.\n* `A1` - Validated.\n* `A2` - URL is long; not technically incorrect, but may fail with some web browsers.\n* `A3` - Valid domain (successfully resolved DNS).\n* `A4` - Web server responded at root path.\n* `A5` - HTTP HEAD success to URL.\n* `A6` - HTTP GET success to URL.\n* `C1` - URL is a redirect. Redirect successfully followed.\n* `C2` - Missing URL scheme. Default scheme successfully added.\n* `E1` - Blank URL.\n* `E2` - Invalid format.\n* `E3` - Invalid URL scheme.\n* `E4` - Invalid domain (cannot resolve DNS).\n* `E5` - URL is a redirect. Redirected URL failed validation.\n* `E6` - URL is a redirect. Cyclic redirection detected.\n* `E7` - URL includes an unrecognized hostname type.\n* `E8` - URL includes an IPv4 address.\n* `E9` - URL includes an IPv6 address. Not supported by many systems.\n* `E10` - Error connecting to the remote server.\n* `E11` - HTTP status error received.\n","example":{"A1":"Validated.","C1":"URL is a redirect. Redirect successfully followed."},"additionalProperties":{"type":"string"}},"http_status_code":{"type":"integer","description":"The HTTP status code of the attempt to connect to URL, if any.\n"}}},"error":{"type":"object","description":"Describes an error object.","required":["code","message"],"properties":{"code":{"type":"integer","description":"The HTTP status code."},"message":{"type":"string","description":"A human-readable error message."},"additional_details":{"type":"object","description":"Additional details about the error."}},"example":{"code":"400","message":"Bad request","additional_details":{"reason":"Required element is not specified."}}}}}
